// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  VENDOR
  USER
}

model User {
  id       String  @id @unique @default(uuid())
  email    String  @unique
  password String
  name     String?
  role     Role    @default(USER)
  vendor Vendor?
  admin  Admin?
  profileImage String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vendor {
  vendorId String  @id
  user     User    @relation(fields: [vendorId], references: [id])
  phone    String?

  venues Venue[] // one vendor might have many venues

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  adminId String @id
  user    User   @relation(fields: [adminId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum VenueStatus {
  ACTIVE
  INACTIVE
  PENDING
  UNDER_MAINTENANCE
}

model Venue {
  venue_id       String      @id @unique @default(uuid())
  name           String
  location       String
  sport_type     String
  description    String?
  price_per_slot Float
  amenities      String[]
  images         String[]
  status         VenueStatus @default(ACTIVE)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  partner    Vendor @relation(fields: [partner_id], references: [vendorId])
  partner_id String
  Slot       Slot[]

  @@unique([name, location])
}

enum SlotStatus {
  AVAILABLE
  BOOKED
  CANCELLED
}

model Slot {
  slot_id    String     @id @default(uuid())
  venue_id   String
  start_time DateTime
  end_time   DateTime
  date       DateTime
  status     SlotStatus @default(AVAILABLE)
  price      Float

  venue Venue @relation(fields: [venue_id], references: [venue_id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
